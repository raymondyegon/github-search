{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/github-service/github.service.ts","webpack:///./src/app/search-navbar/search-navbar.component.css","webpack:///./src/app/search-navbar/search-navbar.component.html","webpack:///./src/app/search-navbar/search-navbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-search-navbar></app-search-navbar>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'github-search';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { GitsearchService } from './github-service/github.service';\n\n\n\nimport { AppComponent } from './app.component';\nimport { GitsearchComponent } from './search-navbar/search-navbar.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GitsearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [GitsearchService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n ","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n//import 'rxjs/add/operator/map';\n\n@Injectable()\nexport class GitsearchService {\n  private username:string;\n  private clientid = '75fbc3436ae7b2cacc1c';\n  private clientsecret = '3865052f662ff45e88db544725eedad0c1424758';\n\n  constructor(private http:HttpClient) { \n    console.log(\"service works\");\n    this.username = 'raymondyegon'; \n\n  }\n  getProfileDesc(){\n    return this.http.get(\"https://api.github.com/users/\" + this.username + \"?client_id=\" + this.clientid + \"&client_secret=\" + this.clientsecret)\n  \n  }\n  getProfileRepos(){\n    return this.http.get(\"https://api.github.com/users/\" + this.username + \"/repos?client_id=\" + this.clientid + \"&client_secret=\" + this.clientsecret)\n  \n  }\n  updateProfile(username:string){\n    this.username = username;\n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC1uYXZiYXIvc2VhcmNoLW5hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid bg-dark\\\">\\n  <div class=\\\"container\\\">\\n    <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark bg-inverse pull-xs-right\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Home</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\"\\n        aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n\\n      <div class=\\\"collapse navbar-collapse text-right \\\" id=\\\"navbarSupportedContent\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"www.github.com/raymondyegon\\\" target=\\\"_blank\\\"><i class=\\\"fa fa-github\\\" aria-hidden=\\\"true\\\"></i>Github</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" href=\\\"www.twitter.com/login\\\"><i class=\\\"fa fa-twitter\\\" aria-hidden=\\\"true\\\"></i>Twitter</a>\\n          </li>\\n        </ul>\\n\\n\\n      </div>\\n    </nav>\\n  </div>\\n</div>\\n\\n<div class=\\\"jumbotron\\\">\\n  <form class=\\\"text-center\\\">\\n    <label for=\\\"search\\\" class=\\\"sr-only\\\">Search by Name:</label>\\n    <input type=\\\"text\\\" class=\\\"form-group mx-sm-3 mb-2\\\" placeholder=\\\"Enter github username\\\" [(ngModel)]=\\\"username\\\"\\n      name=\\\"username\\\" (keyup)=\\\"findProfile()\\\">\\n    <button class=\\\"btn btn-outline-primary my-2 my-sm-0\\\" type=\\\"submit\\\" (keyup)=\\\"findProfile()\\\">Search</button>\\n  </form>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <div *ngIf=\\\"profile\\\">\\n    <div class=\\\"panel panel-default\\\">\\n      <div class=\\\"panel-heading\\\">\\n        {{profile.name}} <small>({{profile.login}})</small>\\n        <span *ngIf=\\\"profile.company\\\">, Works for {{profile.company}}</span>\\n        {{profile.location}}\\n      </div>\\n      <br><br>\\n      <div class=\\\"\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"\\\">\\n\\n            <img src=\\\"{{profile.avatar_url}}\\\" class=\\\"img- img-responsive\\\" alt=\\\"Profile Picture\\\">\\n\\n          </div>\\n          <div class=\\\"col-sm-4\\\">\\n            <ul class=\\\"list-group\\\">\\n              <li class=\\\"list-group-items\\\" *ngIf=\\\"profile.bio\\\">{{profile.bio}}</li>\\n              <li class=\\\"list-group-items\\\" *ngIf=\\\"profile.hireable\\\">{{profile.hireable}}</li>\\n              <li class=\\\"list-group-items\\\" *ngIf=\\\"profile.blog\\\"><a href=\\\"{{profile.blog}}\\\"\\n                  target=\\\"_blank\\\">{{profile.blog}}</a></li>\\n              <li class=\\\"list-group-items\\\" *ngIf=\\\"profile.email\\\"><a href=\\\"emailto:{{profile.email}}\\\"\\n                  target=\\\"_blank\\\">{{profile.email}}</a></li>\\n\\n            </ul>\\n\\n          </div>\\n          <div class=\\\"\\\">\\n            <div>\\n              <p>\\n                <span class=\\\"label label-default\\\">Followers: {{profile.followers}}.</span>\\n                <span class=\\\"label label-default\\\"> Following: {{profile.following}}.</span>\\n                <span class=\\\"label label-default\\\"> Public Gists: {{profile.public_gists}}.</span>\\n                <span class=\\\"label label-default\\\">Public Repositories: {{profile.public_repos}}.</span>\\n              </p>\\n              <p><a href=\\\"{{profile.html_url}}\\\" target=\\\"_blank\\\" class=\\\"btn btn-primary btn-sm\\\">Navigate to github\\n                  profile</a></p>\\n\\n\\n              <div class=\\\"panel panel-default\\\">\\n                <div class=\\\"panel-heading\\\">\\n                  <h3 class=\\\"panel-title\\\">Repositories</h3>\\n                </div>\\n                <div class=\\\"panel-body\\\" *ngFor=\\\"let repo of repos\\\">\\n                  <p class=\\\"clearfix\\\">\\n                    {{repo.name}} <a href=\\\"{{repo.html_url}}\\\" class=\\\"btn btn-sm btn-secondary pull-right\\\"\\n                      target=\\\"_blank\\\">Check out Project</a>\\n\\n                  </p>\\n                  <p>{{repo.description}}</p>\\n                </div>\\n              </div>\\n            </div>\\n\\n\\n          </div>\\n\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { GitsearchService } from './../github-service/github.service';\n\n@Component({\n  selector: 'app-search-navbar',\n  templateUrl: './search-navbar.component.html',\n  styleUrls: ['./search-navbar.component.css']\n})\nexport class GitsearchComponent implements OnInit {\n    profile: any;\n    repos: any;\n    username: string;\n\n  constructor(private gitsearchService: GitsearchService) {\n    \n   }\n\n   findProfile(){\n     this.gitsearchService.updateProfile(this.username);\n     this.gitsearchService.getProfileDesc().subscribe(profile =>{\n      console.log(profile);\n      this.profile = profile;\n    });\n    this.gitsearchService.getProfileRepos().subscribe(repos =>{\n      console.log(repos);\n      this.repos = repos;\n    })\n   }\n\n  ngOnInit() {\n  }\n\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}